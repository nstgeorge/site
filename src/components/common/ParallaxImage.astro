---
import type { ACTION_ERROR_CODES } from "astro:actions";
import { Picture } from "astro:assets";
const {
  image,
  alt,
  imgClass,
  verticalOffset,
  title,
  containerClass,
  ...other
} = Astro.props;
---

<script>
  import { animate, inView, scroll, stagger } from "motion";

  document.addEventListener("astro:page-load", () => {
    const images = document.getElementsByClassName("paraimage");
    const contents = document.getElementsByClassName("paracontent");
    if (window.innerWidth > 0) {
      for (let image of images) {
        const verticalOffset = image.dataset.offset ?? 0;
        // avoid poor mobile performance and hard to control image sizing
        scroll(
          animate(image, {
            y: [0, -100],
          }),
          {
            offset: [0, "100vh"],
          },
        );
      }
      for (let content of contents) {
        scroll(
          animate(content, {
            y: [0, 100],
          }),
          {
            offset: [0, "100vh"],
          },
        );
      }
    }

    inView(".paracontent-item", (element) => {
      animate(
        ".paracontent-item",
        {
          opacity: 1,
          y: [10, 0],
        },
        {
          delay: stagger(0.05, { startDelay: 0.2 }),
          duration: 0.25,
        },
      );
    });
  });
</script>
<style>
  .paraimage {
    position: relative;
    top: calc(-15vw + 100px);
  }
</style>
<div class="w-full h-full bg-stone-800">
  <Picture
    src={image}
    alt={alt}
    class=`paraimage min-h-[60vh]! blur-sm scale-150 md:scale-100 md:blur-none ${imgClass ?? ""}`
    {...other}
    data-offset={verticalOffset ?? 0}
  />
  <div
    class=`paracontent z-10 absolute inset-0 flex flex-col px-10 mt-10 w-full h-full justify-center max-w-[50em] mx-auto ${containerClass ?? ""}`
  >
    <div
      class="text-balance tracking-wide leading-[1.3] text-white text-3xl mb-3 md:text-5xl"
    >
      {
        title &&
          title
            .split(" ")
            .map((word) => (
              <span class="inline-block mr-2 md:mr-3 paracontent-item">
                {word + " "}
              </span>
            ))
      }
    </div>
    <slot />
  </div>
</div>
