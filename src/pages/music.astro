---
import { getCollection } from "astro:content";
import HoverButton from "../components/common/HoverButton.astro";
import ProjectOverlay from "../components/common/ProjectOverlay.astro";
import MusicEntry from "../components/entries/MusicEntry.astro";
import Layout from "../layouts/Layout.astro";

let releases = await getCollection("music");
releases.sort((a, b) => b.data.order - a.data.order);

const drumYears = new Date().getFullYear() - 2010;
const { hasOverlay, release, overrideTitle } = Astro.props;
---

<Layout title={overrideTitle ? overrideTitle : `Nate St George // Music`}>
  <div inert={hasOverlay}>
    <h1>Music</h1>
    <div>
      <p>
        My music draws from a wide range of influences: from soundtracks to
        synthwave, jazz to djent, and city pop to symphonies. I have been
        writing for as long as I've been playing drums ({drumYears} years), and in
        that time I've written a lot of stuff, most of which never sees the light
        of day. I have a lot of music I'm sitting on that will hopefully be released
        soon, but in the meantime here are my existing releases!
      </p>
    </div>

    <div
      class="flex flex-col lg:flex-row justify-center items-center mt-5 gap-5"
    >
      <HoverButton
        href="https://natestgeorge.bandcamp.com/"
        target="_blank"
        bgEndColor="#1DA0C3"
        bgStartColor="#6046FE"
        accentColor="#FFF"
        className="text-white rounded shadow px-2 py-1 font-mono text-xxs md:text-xs flex flex-row gap-2 items-center"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
        >
          <path fill="currentColor" d="m0 18.75l7.437-13.5H24l-7.438 13.5z"
          ></path>
        </svg>
        Follow me on Bandcamp
      </HoverButton>
      <HoverButton
        href="https://open.spotify.com/artist/0OuyQFGIe0a24m3NG0cplx?si=awKWkGOrTJKwphypz-q3mw"
        target="_blank"
        bgEndColor="#292524"
        bgStartColor="#000"
        accentColor="#CCC"
        className="text-[#1db954] rounded px-2 py-1 font-mono text-xs transition-all flex flex-row items-center gap-2"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
        >
          <path
            fill="currentColor"
            d="M12.001 2c-5.5 0-10 4.5-10 10s4.5 10 10 10s10-4.5 10-10s-4.45-10-10-10m3.75 14.65c-2.35-1.45-5.3-1.75-8.8-.95c-.35.1-.65-.15-.75-.45c-.1-.35.15-.65.45-.75c3.8-.85 7.1-.5 9.7 1.1c.35.15.4.55.25.85c-.2.3-.55.4-.85.2m1-2.7c-2.7-1.65-6.8-2.15-9.95-1.15c-.4.1-.85-.1-.95-.5s.1-.85.5-.95c3.65-1.1 8.15-.55 11.25 1.35c.3.15.45.65.2 1s-.7.5-1.05.25M6.3 9.75c-.5.15-1-.15-1.15-.6c-.15-.5.15-1 .6-1.15c3.55-1.05 9.4-.85 13.1 1.35c.45.25.6.85.35 1.3c-.25.35-.85.5-1.3.25C14.7 9 9.35 8.8 6.3 9.75"
          ></path>
        </svg>
        Follow me on Spotify
      </HoverButton>
    </div>

    <div class="mt-10">
      <ul id="releases" inert={hasOverlay}>
        {
          releases.map((release) => {
            return <MusicEntry entry={release} isOnSinglePage={hasOverlay} />;
          })
        }
      </ul>
    </div>
  </div>

  {
    hasOverlay && (
      <ProjectOverlay title={release.data.title} backlink="/music">
        <slot />
      </ProjectOverlay>
    )
  }
</Layout>
